name: API Tests and Docker Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Authentification DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build et démarrage des services Docker
      - name: Build and start services
        run: |
          docker-compose up --build -d

      - name: Wait for API to be ready
        run: |
          until curl -f http://localhost:8000/; do
            echo "Waiting for API to be available..."
            sleep 30
          done

      # Installation des dépendances Python pour les tests
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests httpx

      # Lancer les tests
      - name: Run API Tests
        run: |
          pytest tests/test_api.py --disable-warnings

      # Taguer et push les images Docker sur Docker Hub
      - name: Build and push Docker images to Docker Hub
        run: |
          # Taguer les images construites
          docker tag job_market_api:latest ${{ secrets.DOCKERHUB_USERNAME }}/job_market_api:latest
          docker tag job_market_ml-processing:latest ${{ secrets.DOCKERHUB_USERNAME }}/job_market_ml-processing:latest
          docker tag job_market_chargement:latest ${{ secrets.DOCKERHUB_USERNAME }}/job_market_chargement:latest
          
          # Pusher les images sur Docker Hub
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/job_market_api:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/job_market_ml-processing:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/job_market_chargement:latest

      # Arrêter et supprimer les services Docker
      - name: Shut down Docker Compose services
        if: always()
        run: |
          docker-compose down
